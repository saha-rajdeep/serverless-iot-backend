Description: >-
  This is a sample template for lambda-backed custom resource. Runtime for
  Lambda function is python
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  SNSEmail:
    Type: String
    Default: youremail@email.com
Resources:
  AlertSNSTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - Endpoint: !Ref SNSEmail
          Protocol: email
  IoTFunction:
    Type: 'AWS::Serverless::Function'
    DependsOn: AlertSNSTopic
    Properties:
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - TestLambdaExecutionRole
        - Arn
      CodeUri: 's3://raj-saha-website-code/lambda_function.zip'
      Timeout: 10
      Runtime: python3.7
      Events:
        PutImageEvent:
          Type: IoTRule
          Properties:
            Sql: SELECT * FROM 'iot/test'
      Environment:
        Variables:
          bad_image_sns: !Ref BadImageSNSTopic
  TestLambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: cwlogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'sns:*'
                Resource: '*'
              - Effect: Allow
                Action: 'iot:*'
                Resource: '*'
              - Effect: Allow
                Action: 's3:*'
                Resource: '*'
              - Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource: !Join 
                  - ':'
                  - - 'arn:aws:logs'
                    - !Ref 'AWS::Region'
                    - !Ref 'AWS::AccountId'
                    - '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Join 
                    - ':'
                    - - 'arn:aws:logs'
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - log-group
                      - /aws/lambda/*
                      - '*'
Outputs:
  AlertSNSTopic:
    Value: !Ref AlertSNSTopic